webpackJsonp([3],{

/***/ 164:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Home = function (_React$Component) {
	  _inherits(Home, _React$Component);

	  function Home() {
	    _classCallCheck(this, Home);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Home).apply(this, arguments));
	  }

	  _createClass(Home, [{
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(
	          'p',
	          { className: 'mdl-typography--body-1 mdl-color-text--grey-800' },
	          'This blog is used to record some information about my projects and some problems which I encounter and solve. Maybe you are searching some problems as I encounter. Therefore, I write it in my blog and share it to everyone which needs it. By the way, I use github to set up this blog. As a result, if you are interested in my code, you can see ',
	          _react2.default.createElement(
	            'a',
	            { href: 'https://github.com/HsuTing/blog', style: { textDecoration: "none", color: "inherit", fontWeight: "bold" } },
	            'here'
	          ),
	          '.'
	        ),
	        _react2.default.createElement(
	          'ul',
	          { className: 'mdl-list' },
	          this.props.data.map(function (d, i) {
	            return _react2.default.createElement(
	              'li',
	              { key: i, className: 'mdl-list__item mdl-list__item--two-line' },
	              _react2.default.createElement(
	                'span',
	                { className: 'mdl-list__item-primary-content' },
	                _react2.default.createElement(
	                  'a',
	                  { href: "./?no=" + (_this2.props.data.length - 1 - i), style: { textDecoration: "none" } },
	                  _react2.default.createElement(
	                    'i',
	                    { className: 'material-icons mdl-list__item-avatar mdl-color-text--grey-800',
	                      style: { fontSize: "20px",
	                        padding: "10px",
	                        backgroundColor: "initial",
	                        color: "initial" }
	                    },
	                    'label'
	                  ),
	                  _react2.default.createElement(
	                    'span',
	                    { className: 'mdl-color-text--grey-800' },
	                    d.title
	                  ),
	                  _react2.default.createElement(
	                    'span',
	                    { className: 'mdl-list__item-sub-title' },
	                    d.date
	                  )
	                )
	              )
	            );
	          })
	        )
	      );
	    }
	  }]);

	  return Home;
	}(_react2.default.Component);

	exports.default = Home;
	;

/***/ }

});