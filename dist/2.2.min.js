webpackJsonp([2],{

/***/ 162:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Article = function (_React$Component) {
	  _inherits(Article, _React$Component);

	  function Article() {
	    _classCallCheck(this, Article);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Article).apply(this, arguments));
	  }

	  _createClass(Article, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(
	          'h3',
	          { className: 'mdl-typography--display-2' },
	          this.props.title
	        ),
	        _react2.default.createElement(
	          'h6',
	          { className: 'mdl-typography--title mdl-color-text--grey-400' },
	          this.props.date
	        ),
	        this.props.article.map(function (d, i) {
	          if ((typeof d === 'undefined' ? 'undefined' : _typeof(d)) == 'object') {
	            var label = Object.keys(d)[0];
	            switch (label) {
	              default:
	                return null;
	            }
	          }

	          return _react2.default.createElement('p', { key: i,
	            className: 'mdl-typography--body-1',
	            dangerouslySetInnerHTML: { __html: d }
	          });
	        })
	      );
	    }
	  }]);

	  return Article;
	}(_react2.default.Component);

	exports.default = Article;
	;

/***/ }

});